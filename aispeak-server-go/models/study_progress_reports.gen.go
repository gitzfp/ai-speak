// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"
)

const TableNameStudyProgressReport = "study_progress_reports"

// StudyProgressReport mapped from table <study_progress_reports>
type StudyProgressReport struct {
	ID          int32      `gorm:"column:id;type:int;primaryKey;autoIncrement:true;comment:报告唯一标识" json:"id"`                                             // 报告唯一标识
	UserID      string     `gorm:"column:user_id;type:varchar(50);not null;comment:用户ID" json:"user_id"`                                                  // 用户ID
	BookID      string     `gorm:"column:book_id;type:varchar(50);not null;comment:书籍ID" json:"book_id"`                                                  // 书籍ID
	LessonID    *int32     `gorm:"column:lesson_id;type:int;comment:课程ID" json:"lesson_id"`                                                               // 课程ID
	Content     string     `gorm:"column:content;type:varchar(255);not null;comment:学习内容（单词或句子）" json:"content"`                                          // 学习内容（单词或句子）
	ContentType int32      `gorm:"column:content_type;type:int;not null;comment:类型（0: 单词发音, 1: 单词读, 2: 单词写, 3: 单独拼写按钮进去的那边提交, 4:句子）" json:"content_type"` // 类型（0: 单词发音, 1: 单词读, 2: 单词写, 3: 单独拼写按钮进去的那边提交, 4:句子）
	ErrorCount  *int32     `gorm:"column:error_count;type:int;comment:错误次数（仅对单词的读和写有效）" json:"error_count"`                                               // 错误次数（仅对单词的读和写有效）
	Points      *int32     `gorm:"column:points;type:int;comment:积分" json:"points"`                                                                       // 积分
	CreateTime  *time.Time `gorm:"column:create_time;type:datetime;comment:创建时间" json:"create_time"`                                                      // 创建时间
	UpdateTime  *time.Time `gorm:"column:update_time;type:datetime;comment:更新时间" json:"update_time"`                                                      // 更新时间
	JSONData    *string    `gorm:"column:json_data;type:text;comment:TEXT 数据 的评分数据" json:"json_data"`                                                     // TEXT 数据 的评分数据
	ContentID   int32      `gorm:"column:content_id;type:int;not null;comment:内容ID（单词ID或句子ID等）" json:"content_id"`                                        // 内容ID（单词ID或句子ID等）
	VoiceFile   *string    `gorm:"column:voice_file;type:varchar(300);comment:语音文件路径或 URL" json:"voice_file"`                                             // 语音文件路径或 URL
	Chinese     *string    `gorm:"column:chinese;type:varchar(300);comment:中文翻译" json:"chinese"`                                                          // 中文翻译
	AudioURL    *string    `gorm:"column:audio_url;type:varchar(300);comment:音频文件路径或 URL" json:"audio_url"`                                               // 音频文件路径或 URL
}

// TableName StudyProgressReport's table name
func (*StudyProgressReport) TableName() string {
	return TableNameStudyProgressReport
}
